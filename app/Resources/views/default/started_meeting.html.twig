{% extends 'base.html.twig' %}
{% form_theme form 'bootstrap_3_layout.html.twig' %}

{% block head %}
    <title>Meeting gestartet</title>
{% endblock %}

{% block body %}
<h1>Name des Meetings: {{ meeting_name }}</h1>
<br />
<br />
<h3>Ziele des Meetings: {{ meeting_description }}</h3>
<hr style='color: black' />
<div class="row">
    <div class="col-md-4">
        <br />
        <h3>Agendapunkte</h3>
        <div id = "countdownExample">
            {% for agenda in agendas %}
                <h4>
                    <td>
                        <div id="agenda_{{loop.index}}" class="test" data-aid="{{ loop.index }}">
                            Agendapunkt: {{ agenda.name }}   Minuten: <span class="values" data-time="{{ (60000*agenda.minutes) }}" id="time_{{ loop.index }}" data-tid="{{ loop.index }}">{{ agenda.minutes }}</span>
                        </div>
                    </td><br />
                </h4>
            {% endfor %}
        </div>
        <br />
        <button  class="js-stop btn btn-default" style="" data-target="">Skip</button>
    </div>
    
    {{ form_start(form) }}
        <div class="col-md-4">
            
            <h3><a href="#" id="sobo-einausblenden">Notizen zum Meeting</a></h3>
            <div id="meetingNotice">
            <p id="email-fields-list" data-prototype="{{ form_widget(form.notice.vars.prototype)|e }}">
                {% for noticeField in form.notice %}
                    <td>{{ form_errors(noticeField) }}</td>
                    {{ form_widget(noticeField) }}
                {% endfor %}
            </p>    
             </div>
            <a href="#" id="add-another-email" class="btn btn-default">Notiz hinzufügen</a>
            <br />
            <br />
            <br />    
            <br />
            {{ form_row(form.save) }}
           
        </div>
    {{ form_end(form) }}
    
    <div class="col-md-4">
        <h3>Dokumente</h3> 
        <br />
        {% if meeting_files %}
            {% for meeting_file in meeting_files  %}
                <a href="{{ asset('brochures_directory/') }}{{meeting_file.name}}" target="_blank"><b>{{meeting_file.name}}</b></a><br />
            {% endfor %}
        {% else %}
            <p>Für dieses Meeting sind keine Dateien vorhanden.</p>
        {% endif %}
    </div>    
</div>
    
<script>
    

    $(document).ready(function () {
        'use strict';
        
        var emailCount = '{{ form.notice|length }}';
        
            $('.js-datepicker').datepicker({ 
                            format: 'mm/dd/yyyy',
                            language: 'DE',
                        });

            addAnAgenda();

            jQuery('#add-another-email').click(function(e) {
                e.preventDefault();

                addAnAgenda();
            });
            
            /* Hier der jQuery-Code */
            $('#sobo-einausblenden').click(function(){
                $('#meetingNotice').toggle();
            })

            function addAnAgenda() {
                var emailList = jQuery('#email-fields-list');

                // grab the prototype template
                var newWidget = emailList.attr('data-prototype');
                // replace the "__name__" used in the id and name of the prototype
                // with a number that's unique to your emails
                // end name attribute looks like name="contact[emails][2]"
                newWidget = newWidget.replace(/__name__/g, emailCount);
                emailCount++;

                // create a new list element and add it to the list
                var newLi = jQuery('<p> </p>', emailCount).html(newWidget);
                newLi.appendTo(emailList);
            }   

        var timersElements = $('[data-time]'),
        timers = [];
        console.log(timersElements);
        var dir;
        var i = 1;
{#        var timer_up = '';#}
        

        $.each(timersElements, function (k, timerElement) {
            var t = {
                "active" : false,
                "id" : $(timerElement).attr('id'),
                "time": parseInt($(timerElement).data('time'), 10),
                "target": $(timerElement).data('target'),
                "dir": "up",

                "interval": setInterval(function () {
                   
                    if(dir == "up"){
                        if(t.active == true){
                            if(timer_up){
                                t.time = Number(timer_up.split(':')[0]) * 60 + Number(timer_up.split(':') [1]) * 1000;
                                timer_up = '';
                                $('.active').css("color", "red");
                                $('.activen').css("font-size", "30px");
                                t.time = t.time + 15;
                                if (t.time >= 0) {
                                    t.show();
                                } else {
                                    
                                    dir = "down";
                                }
                            } else {
                                setCookie(t.id + '_up', $('.active').text(), 1);
                                $('.active').css("color", "red");
                                $('.activen').css("font-size", "30px");
                                t.time = t.time + 15;
                                if (t.time >= 0) {
                                    t.show();
                                } else {
                                    dir = "down";
                                }
                            }
                        }   
                    }  
                    if (dir == "down"){
                       if(t.active == true){
                            if(timer_down){
                                
                                
                                $('.activen').css("font-size", "30px");
                                t.time = t.time - 15;
                                if (t.time >= 0) {
                                    t.show();
                                } else {
                                    dir = "up";
                                }
                            } else {
                                console.log('AAA');
                                setCookie(t.id +'_down', $('.active').text(), 1);
                                $('.activen').css("font-size", "30px");
                                t.time = t.time - 15;
                                if (t.time >= 0) {
                                    t.show();
                                } else {
                                    setCookie(t.id +'_down', 0, 1);
                                    dir = "up";
                                }
                            }
                        } 
                    }
                }, 1),
                
                
                
                        
                "show": function () {
                    
                    $(timerElement).text(millito(this.time));
                },
                "countdown": function () {
                    dir = "down";
                    if(getCookie(t.id + '_down')){
                        var timer_down = getCookie(t.id + '_down');
                        t.time = Number(timer_down.split(':')[0]) * 600 * 100 + Number(timer_down.split(':') [1]) * 1000;
                        timer_down = '';
                    }
                    t.active = true;
                    t.interval();

                },
                "countup": function(){
                    t.active = true;
                    dir = "up";
                    t.interval();
                },       
                "stop":  function(){  
                    $.each(timers, function(index){
                        if(t.active = true){
                            var tElement = jQuery('#time_' +(this.id));
                            window.clearInterval(t.interval);
                            t.active = false;
                            this.id = i++;

                            console.log('stop this.id:' + this.id);
                            tElement.active = true;
                            timers[this.id].countdown(); 

                        }
                        else{
                            console.log("t ist nicht aktiv");    
                        }
                    }); 
                },
            };

            timers[k] = t;
            
            if(getCookie(t.id + '_up')){
                var timer_up = getCookie(t.id + '_up');
                console.log(timer_up);

            }else {
                console.log('BB');
                var timer_down = getCookie(t.id + '_down');
                console.log(timer_down);
                console.log('BB');
            }

            $('.js-stop').click(function () {
                eraseCookie(t.id + '_up');
                setCookie(t.id +'_down', 0, 1);
                var objectId = $('.active').data('tid') + 1;
                var timerId = $('.active').data('tid') - 1;
                var agendaObjectId = $('.activen').data('aid') + 1;
                var agendaId = $('.activen').data('aid') - 1;
                $('.activen').css("font-size", "20px");
                $('.active').removeClass('active');
                $('.activen').removeClass('activen');
                $('#time_' + objectId).addClass('active');
                $('#agenda_' + agendaObjectId).addClass('activen');
                console.log(objectId + ' : ' + timerId);
                timers[timerId].stop();
            });

        });

        $('#agenda_1').addClass('activen');
        $('#time_1').addClass('active');
        timers[0].countdown();

        $.each(timers, function (k, timer) {
            if (timer.active == true) {
                timer.stop();
            } 
        });
        
        function millito(millis){
            var minutes = Math.floor(millis / 60000);
            var seconds = ((millis % 60000) / 1000).toFixed(0);
            return minutes + ":" + (seconds < 10 ? '0' : '') + (seconds);
        }
        
        function setCookie(cname, cvalue, exdays) {
            var d = new Date();
            d.setTime(d.getTime() + (exdays*24*60*60*1000));
            var expires = "expires="+ d.toUTCString();
            document.cookie = cname + "=" + cvalue + ";" + expires + ";path=/";
        }

        function getCookie(cname) {
            var name = cname + "=";
            var ca = document.cookie.split(';');
            for(var i = 0; i < ca.length; i++) {
                var c = ca[i];
                while (c.charAt(0) == ' ') {
                    c = c.substring(1);
                }
                if (c.indexOf(name) == 0) {
                    return c.substring(name.length, c.length);
                }
            }
            return "";
        }
        
        function eraseCookie(name) {
            setCookie(name,"",-1);
        }
    });

</script>

{% endblock %}
